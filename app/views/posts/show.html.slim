section#main.post
  section#article
    #title
      .bg style='background-image: url("/assets/posts/1");'
      .container
        .icons
          = image_tag 'user_icons/ozaki'
          = image_tag 'user_icons/yamada'
        .text
          h1
            | 僕らの仕事､どこまで｢人工知能｣が奪うのか
    #summary
      p
        | 「プロフェッショナル対談」は、経営共創基盤のマネージングディレクターである塩野誠氏が、次の時代を切り開くリーダーと対談し、キャリアについてのホンネを引き出すコーナー。今回は特別編。今年、ソフトバンクが家庭用ロボット「Pepper」を発表するなど、ロボットは、加速度的に進化を続けている。ロボットの技術が今後ますます発展し、人間の能力を超越したとき、どんな未来が待っているのか。刊行したばかりの『東大准教授に教わる「人工知能って、そんなことまでできるんですか？」』で対談した人工知能学の権威、東京大学の松尾豊准教授に、あらためて話を聞きました。今回はその前編です。
    #body
      .container
        h2
          | 自動運転、お掃除ロボット…中身は“賢いプログラム”
        p.first-person
          = image_tag 'user_icons/ozaki'
          | 最近はどんな業界でも、人工知能という言葉を耳にする機会が増えてきました。実際それがどんな仕組みでできていて、どう動いているのか。私を含めて、よく分からないという人も多いのではないかと思います。そもそも人工知能とは、コンピュータのプログラムなのでしょうか。
        p.second-person
          = image_tag 'user_icons/yamada'
          | そうです。プログラムにはいろいろな定義がありますが、人工知能に搭載されているのは「賢いことをやっているように見えるプログラム」という感じですね。ただ、中でやっていることはそれぞれ違います。
        p.first-person
          = image_tag 'user_icons/ozaki'
          | たとえば「お掃除ロボット」ですと、周辺の環境を探索しながら、どういう経路で動いていくとゴミがなくなるかを計算して動作します。ある種の計画を先に立てて実行するもので、車のナビゲーションもこれに近いやり方です。将棋の場合は、この手を打つと相手はこう返してくるかもしれない、そのとき自分はどう打とうかを考える。シミュレーションを行ってベストな手を探す。未来のことを計画してシミュレーションし、もっとも良いと思える方法を探すというイメージですね。
        p.second-person
          = image_tag 'user_icons/yamada'
          | 状況によってどのルールが使われるかが異なりますが、それによっていろいろな状況に対応できるように、人間が設計していきます。部屋が違えば動きも変わってきますから、部屋の形に応じて動作を変えなさい、とプログラムされているわけです。
        p.first-person
          = image_tag 'user_icons/ozaki'
          | たとえば、自動車の自動運転は非常に難しいと思います。人間なら免許が必要ですからね。状況がどんどん変化していく中でレーダが周囲の環境を認知して解析していくはずですが、走り出せば歩行者が飛び出してくるかもしれない。こうした部分も「こう来たら、こう返せ」のような形でプログラムされているのでしょうか？
        p.second-person
          = image_tag 'user_icons/yamada'
          | そうです。自動運転の場合、どの道をどう通るかを決めるのは、それほど難しくはありません。そこは普通のカーナビがやっているような処理ですから。
          br
          | もっとも難度が高いのは状況の認識です。たとえば、子どもが飛び出したとか、他の車が止まって道をふさいだとか。それが日常的に起きる事象ならまだいいとして、事故は想定しないところから起きます。たとえば、道路に地割れがあったらどう対処するか、踏切が故障してバーが下りていないのに電車が通っていたらどうすればいいのか。何が起きているかを認識し、その状況の中で安全に車を動かす。ここがおそらくもっとも難しい部分です。
        p.first-person
          = image_tag 'user_icons/ozaki'
          | ということは、認知がまずあって、認知をしたらコンピュータのプログラムが「こういう対応をしよう」と考えて動くということですか？
        p.second-person
          = image_tag 'user_icons/yamada'
          | そうですね。ルールはどんどん複雑になって、たとえば「この値とこの値の掛け算が一定以上ならこう反応を返せ」みたいな感じです。こうなるとルール自体、人間には理解できなくなりますが、実際は値のところはセンサー入力を使うような形で複雑化しています。ルールが複雑になると、動きはより賢くなっていくと考えていいでしょう。
        p.end
          | (了)
== render 'layouts/footer'